name    = Task-BeLike-CADAVIS
version = 20111013
author  = Chad A Davis <chad.a.davis@gmail.com>
license = Perl_5
copyright_holder = Chad A Davis
copyright_year   = 2011

; Plugin setup inspired by:
; http://p3rl.org/Dist::Zilla::PluginBundle::DAGOLDEN

[GatherDir]

; file modifications
[PkgVersion]        ; add $VERSION = ... to all module files
[PodVersion]        ; add VERION to every POD 
;[NextRelease]       ; Add new version to the Changes file
[PodWeaver]         ; Add boilerplate documentation to modules
;[Prepender]         ; prepend a copyright, not need if using PodWeaver

; generated files
[License]           ; boilerplate license
[Readme]

; t tests
[Test::Compile]      ; make sure .pm files all compile
[ExtraTests]
;[CriticTests]
;[PodCoverageTests]
;[PodSyntaxTests]
fake_home = 1       ; fakes $ENV{HOME} just in case

; metadata
[MinimumPerl]       ; determine minimum perl version
[AutoPrereqs]       ; find prereqs from code
[Prereqs]           ; Any additional explicit prereqs here

; First, submit test reports
Task::CPAN::Reporter = 0
; Other testing
Test::Class = 0
Test::Approx = 0

; Basic CPAN setup (plus readline)
Bundle::CPAN = 0

; Bunch of modern tools
;Task::Kensho = 0
; cpanm, local::lib
Task::Kensho::Toolchain = 0
; Test::Most, Devel::Cover, etc
Task::Kensho::Testing = 0
; Try::Tiny, TryCatch, autodie
Task::Kensho::Exceptions = 0
; Task::Moose
Task::Kensho::OOP = 0
; DBI, DBD::SQLite, DBIC, Schema::Loader, etc
Task::Kensho::DBDev = 0
Class::DBI = 0
DBD::mysql = 0
; perltidy, perlcritic, NYTProf, dzil, etc
Task::Kensho::ModuleDev = 0
; More Author tools
Task::Dist::Zilla = 0
; CHI
Task::Kensho::Scalability = 0
; re.pl, ack, nopaste, corelist, perlbrew
Task::Kensho::CLI = 0
; Smart::Comments, IO::All
Task::Kensho::Hackery = 0

; Catalyst includes Catalyst::Devel
; Also in Task::Kensho::WebDev
Task::Catalyst = 0

;Task::Dancer = 0

; Misc
Sort::Key = 0
PDL = 0
Log::Any = 0
Mason = 0


; source control
;[Subversion::Tag]   ; Tag subversion releases
;[Bugtracker]        ; defaults to RT
;[MetaResourcesFromGit]
;homepage = http://github.com/%a/%r
;bugtracker.web = https://github.com/%a/%r/issues
[GithubMeta]
issues = 1

[MetaYAML]          ; generate META.ym
[MetaJSON]          ; generate META.json

; Extra dist
[ExecDir]           ; include 'bin/*' as executables
[ShareDir]          ; include 'share/' for File::ShareDir

; Build system
;[MakeMaker]         ; create Makefile.PL
;[ModuleBuild]
[ModuleInstall]

; manifest (after all generated files)
[Manifest]          ; create MANIFEST

; before release
[CheckPrereqsIndexed]    ; ensure prereqs are on CPAN
;[CheckChangesHasContent] ; ensure Changes has been updated
[TestRelease]       ; ensure t/ tests pass (including dynamic extra tests)
[ConfirmRelease]    ; prompt before uploading

; releaser
[UploadToCPAN]      ; uploads to CPAN
;[FakeRelease]       ; simulate a release without actually uploading to CPAN

